"""
Django settings for dkt_app project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config


TWILIO_ACCOUNT_SID = config("TWILIO_ACCOUNT_SID")
TWILIO_AUTH_TOKEN = config("TWILIO_AUTH_TOKEN")
TWILIO_VERIFY_SERVICE_SID = config("TWILIO_VERIFY_SERVICE_SID")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0oomw^myzexxz(ek51%c-^)g+35*-)*egs4x=&+1ho24%06-jh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['13.51.177.129', '13.51.177.129:8000', 'localhost', '127.0.0.1']



# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dkt_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
       'DIRS': [BASE_DIR / "templates"], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dkt_app.wsgi.application'

DATA_UPLOAD_MAX_MEMORY_SIZE = 52428800  
FILE_UPLOAD_MAX_MEMORY_SIZE = 52428800  


LOGIN_REDIRECT_URL = '/dashboard/'   
LOGOUT_REDIRECT_URL = '/login/' 

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}




# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# AUTH_USER_MODEL = "app.CustomUser"



# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


MEDIA_URL  = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


# settings.py
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'shahwaiz.dev@gmail.com'
EMAIL_HOST_PASSWORD = 'egyjmfcedjwhurre'
EMAIL_USE_TLS = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

APPEND_SLASH = False

# if (!function_exists('getCollection')) {
#     function getCollection()
#     {
#         $cats = Category::where('parent_id', 0)->get();
#         $html = '';

#         foreach ($cats->take(10) as $cat) {
#             $chcats = Category::where('parent_id', $cat->id)->get();
#             if ($chcats->count() > 0) {
#                 $route = route('sub-cate', $cat->id);
                
                
#                 $html .= "<li class='sub-mega-menu sub-mega-menu-width-22 mx-4' style='width: max-content !important;'>
#                             <a class='menu-title' href='{$route}'>{$cat->name}</a>
#                             <ul>";
                
#                 // Subcategories (up to 8)
#                 foreach ($chcats->take(5) as $chcat) {
#                     $chRoute = route('shop.category', $chcat->id);
#                     $html .= "<li><a href='{$chRoute}'>{$chcat->name}</a></li>";

#                 }

#                 $html .= "<li class='view-more mb-5'><a  href='{$route}' class=' text-black'>View More â†’</a></li>";

#                 $html .= "</ul></li>";
#             }
#         }

#         return $html;
#     }
# }


# if (!function_exists('getMobCollection')) {
#     function getMobCollection()
#     {

#         $cats = Category::where('parent_id', 0)->get();
#         $count = 0;
#         $html = '';
#         foreach ($cats as $key => $cat) {
#             // if ($count < 3) {
#                 $chcats = Category::where('parent_id', $cat->id)->get();
#                 if (count($chcats) > 0) {
#                     $route = route('sub-cate', $cat->id);
#                     $html .= "
#                      <li class='menu-item-has-children'>
#                      <a class='menu-item-has-children' href='#'>$cat->name</a>
#                     ";
#                      foreach ($chcats->take(5) as $chcat) {
#                         route('shop.category', $chcat->id);
#                         $html .= "<ul class='dropdown'>
#                             <li><a href='$route'>$chcat->name</a></li>
#                         </ul>";
#                     }
#                     // $html .= "<li class='view-more'><a  href='{$route}' class='btn text-white'>View More</a></li>";
#                     $html .= "</li>";
#                     $count++;
#                 }
#             // }
#         }
#         return $html;
#     }
# }
